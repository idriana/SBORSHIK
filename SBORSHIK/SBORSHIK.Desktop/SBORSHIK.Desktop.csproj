<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net7.0-windows TFM, one for MacOS with net7.0-macos and one with net7.0 TFM for Linux.-->
    <TargetFramework>net7.0</TargetFramework>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Configurations>Debug;Release;Executable</Configurations>
    <Platforms>AnyCPU;x64</Platforms>
    <ApplicationIcon>ico.ico</ApplicationIcon>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="ico.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SBORSHIK\SBORSHIK.csproj" />
  </ItemGroup>

	<Target Name="ILMerge">
		<!-- the ILMergePath property points to the location of ILMerge.exe console application -->
		<Exec Command="$(ILMergeConsolePath) Bin\x64\Release\myapp.exe  /out:myapp.exe Bin\x64\Release\File1.dll Bin\x64\Release\File2.dll Bin\x64\Release\File3.dll " />
	</Target>
	
</Project>
